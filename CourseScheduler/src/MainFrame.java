import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.sql.Timestamp;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester; 
    
    public MainFrame() {
        initComponents();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
        
    }
    
    public void rebuildSemesterComboBoxes()
    {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0)
        {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        }
        else
        {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildCourseComboBoxes()
    {
        ArrayList<String> courses = CourseQueries.getAllCourseCodes(currentSemester);
        studentScheduleCoursesComboBoxCourse.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        displayCourseListDisplayCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        admiDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        studentDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        
    }
    
    public void rebuildStudentComboBoxes()
    {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        ArrayList<String> nameList = new ArrayList<String>();
        
        for(StudentEntry student:students){
            nameList.add(student.getLastName()+", "+student.getFirstName());
        }
        studentScheduleCoursesComboBoxSelectedStudent.setModel(new javax.swing.DefaultComboBoxModel(nameList.toArray())); 
        studentDisplayScheduleComboBoxStudent.setModel(new javax.swing.DefaultComboBoxModel(nameList.toArray()));
        adminDropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(nameList.toArray()));
        studentDropCourseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(nameList.toArray()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        CourseSchedulerLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        AdminTab = new javax.swing.JPanel();
        AdminPane = new javax.swing.JTabbedPane();
        adminAddSemester = new javax.swing.JPanel();
        adminAddSemesterNameLabel = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        adminAddCourses = new javax.swing.JPanel();
        adminAddCoursesCourseCodeLabel = new javax.swing.JLabel();
        adminAddCoursesCodeTextField = new javax.swing.JTextField();
        adminAddCoursesDescriptionLabel = new javax.swing.JLabel();
        adminAddCoursesDescriptionTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        adminAddCoursesSeatSpinner = new javax.swing.JSpinner();
        adminAddCoursesSubmitButton = new javax.swing.JButton();
        adminAddCoursesLabel = new javax.swing.JLabel();
        adminAddStudent = new javax.swing.JPanel();
        adminAddStudentIDLabel = new javax.swing.JLabel();
        adminAddStudentFirstNameLabel = new javax.swing.JLabel();
        adminAddStudentLastNameLabel = new javax.swing.JLabel();
        adminAddStudentIDtextField = new javax.swing.JTextField();
        adminAddStudentFirstNameTextField = new javax.swing.JTextField();
        adminAddStudentLastNameTextField = new javax.swing.JTextField();
        adminAddStudentLabel = new javax.swing.JLabel();
        adminAddStudentSubmitButton = new javax.swing.JButton();
        adminDisplayCourseListofStudents = new javax.swing.JPanel();
        displayCourseListDisplayCourseLabel = new javax.swing.JLabel();
        displayCourseListDisplayCourseComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayCourseListScheduledStudentTable = new javax.swing.JTable();
        displayCourseListWaitlistedStudentLabel = new javax.swing.JLabel();
        displayCourseListScheduledStudentLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        displayCourseListWaitlistedStudentTable = new javax.swing.JTable();
        displayCourseListDisplayButton = new javax.swing.JButton();
        adminDropStudent = new javax.swing.JPanel();
        adminDropStudentLabel = new javax.swing.JLabel();
        adminDropStudentComboBox = new javax.swing.JComboBox<>();
        adminDropStudentButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        adminDropStudentTextArea = new javax.swing.JTextArea();
        adminDropCourse = new javax.swing.JPanel();
        adminDropCourseLabel = new javax.swing.JLabel();
        admiDropCourseComboBox = new javax.swing.JComboBox<>();
        adminDropCourseButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        adminDropCourseTextArea = new javax.swing.JTextArea();
        StudentTab = new javax.swing.JPanel();
        studentDisplayCourses = new javax.swing.JTabbedPane();
        studentDisplayCourse = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentDisplayCourseTable = new javax.swing.JTable();
        studentDisplayCoursesButton = new javax.swing.JButton();
        studentScheduleCourses = new javax.swing.JPanel();
        studentScheduleCoursesSelectedCourseLabel = new javax.swing.JLabel();
        studentScheduleCoursesComboBoxCourse = new javax.swing.JComboBox<>();
        studentScheduleCoursesSelectedStudentLabel = new javax.swing.JLabel();
        studentScheduleCoursesComboBoxSelectedStudent = new javax.swing.JComboBox<>();
        studentScheduleCoursesSubmitButton = new javax.swing.JButton();
        studentScheduleCoursesLabel = new javax.swing.JLabel();
        studentDisplaySchedule = new javax.swing.JPanel();
        studentDisplayScheduleStudentLabel = new javax.swing.JLabel();
        studentDisplayScheduleComboBoxStudent = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        studentDisplayScheduleTable = new javax.swing.JTable();
        studentDisplayScheduleDisplayButton = new javax.swing.JButton();
        studentDropCourse = new javax.swing.JPanel();
        studentDropCourseLabel = new javax.swing.JLabel();
        studentDropCourseComboBox = new javax.swing.JComboBox<>();
        studentDropCourseButton = new javax.swing.JButton();
        studentDropCourseStudentComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        studentDropCourseTextArea = new javax.swing.JTextArea();
        currentSemesterTextLabel = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CourseSchedulerLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        CourseSchedulerLabel.setForeground(new java.awt.Color(0, 153, 153));
        CourseSchedulerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CourseSchedulerLabel.setText("Course Scheduler");

        adminAddSemesterNameLabel.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);
        addSemesterTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterTextfieldActionPerformed(evt);
            }
        });

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout adminAddSemesterLayout = new javax.swing.GroupLayout(adminAddSemester);
        adminAddSemester.setLayout(adminAddSemesterLayout);
        adminAddSemesterLayout.setHorizontalGroup(
            adminAddSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddSemesterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminAddSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(adminAddSemesterLayout.createSequentialGroup()
                        .addComponent(adminAddSemesterNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(adminAddSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addSemesterSubmitButton)
                            .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminAddSemesterLayout.setVerticalGroup(
            adminAddSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddSemesterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminAddSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminAddSemesterNameLabel)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(addSemesterSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AdminPane.addTab("Add Semester", adminAddSemester);

        adminAddCoursesCourseCodeLabel.setText("Course Code:");

        adminAddCoursesDescriptionLabel.setText("Course Description:");

        jLabel3.setText("Seats:");

        adminAddCoursesSubmitButton.setText("Submit");
        adminAddCoursesSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminAddCoursesSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminAddCoursesLayout = new javax.swing.GroupLayout(adminAddCourses);
        adminAddCourses.setLayout(adminAddCoursesLayout);
        adminAddCoursesLayout.setHorizontalGroup(
            adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddCoursesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(adminAddCoursesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(adminAddCoursesLayout.createSequentialGroup()
                        .addComponent(adminAddCoursesDescriptionLabel)
                        .addGap(31, 31, 31)
                        .addComponent(adminAddCoursesDescriptionTextField))
                    .addGroup(adminAddCoursesLayout.createSequentialGroup()
                        .addGroup(adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminAddCoursesCourseCodeLabel)
                            .addComponent(jLabel3))
                        .addGap(72, 72, 72)
                        .addGroup(adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminAddCoursesCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(adminAddCoursesSeatSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(adminAddCoursesSubmitButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        adminAddCoursesLayout.setVerticalGroup(
            adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddCoursesLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminAddCoursesCourseCodeLabel)
                    .addComponent(adminAddCoursesCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminAddCoursesDescriptionLabel)
                    .addComponent(adminAddCoursesDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adminAddCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(adminAddCoursesSeatSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(adminAddCoursesSubmitButton)
                .addGap(32, 32, 32)
                .addComponent(adminAddCoursesLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AdminPane.addTab("Add Course", adminAddCourses);

        adminAddStudentIDLabel.setText("Student ID:");

        adminAddStudentFirstNameLabel.setText("First Name:");

        adminAddStudentLastNameLabel.setText("Last Name:");

        adminAddStudentIDtextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminAddStudentIDtextFieldActionPerformed(evt);
            }
        });

        adminAddStudentFirstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminAddStudentFirstNameTextFieldActionPerformed(evt);
            }
        });

        adminAddStudentSubmitButton.setText("Submit");
        adminAddStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminAddStudentSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminAddStudentLayout = new javax.swing.GroupLayout(adminAddStudent);
        adminAddStudent.setLayout(adminAddStudentLayout);
        adminAddStudentLayout.setHorizontalGroup(
            adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddStudentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(adminAddStudentLayout.createSequentialGroup()
                            .addGap(88, 88, 88)
                            .addComponent(adminAddStudentSubmitButton))
                        .addComponent(adminAddStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(adminAddStudentLayout.createSequentialGroup()
                            .addComponent(adminAddStudentIDLabel)
                            .addGap(20, 20, 20)
                            .addComponent(adminAddStudentIDtextField)
                            .addGap(4, 4, 4)))
                    .addGroup(adminAddStudentLayout.createSequentialGroup()
                        .addGroup(adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminAddStudentFirstNameLabel)
                            .addComponent(adminAddStudentLastNameLabel))
                        .addGap(18, 18, 18)
                        .addGroup(adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(adminAddStudentLastNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(adminAddStudentFirstNameTextField))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminAddStudentLayout.setVerticalGroup(
            adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddStudentLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminAddStudentIDLabel)
                    .addComponent(adminAddStudentIDtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminAddStudentFirstNameLabel)
                    .addComponent(adminAddStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminAddStudentLastNameLabel)
                    .addComponent(adminAddStudentLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(adminAddStudentSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(adminAddStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        AdminPane.addTab("Add Student", adminAddStudent);

        displayCourseListDisplayCourseLabel.setText("Display Course:");

        displayCourseListDisplayCourseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCourseListDisplayCourseComboBoxActionPerformed(evt);
            }
        });

        displayCourseListScheduledStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "LAST NAME", "FIRST NAME", "STUDENT ID"
            }
        ));
        jScrollPane2.setViewportView(displayCourseListScheduledStudentTable);

        displayCourseListWaitlistedStudentLabel.setText("Waitlisted Students:");

        displayCourseListScheduledStudentLabel.setText("Scheduled Students:");

        displayCourseListWaitlistedStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LAST NAME", "FIRST NAME", "STUDENT ID"
            }
        ));
        jScrollPane4.setViewportView(displayCourseListWaitlistedStudentTable);

        displayCourseListDisplayButton.setText("Display");
        displayCourseListDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCourseListDisplayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminDisplayCourseListofStudentsLayout = new javax.swing.GroupLayout(adminDisplayCourseListofStudents);
        adminDisplayCourseListofStudents.setLayout(adminDisplayCourseListofStudentsLayout);
        adminDisplayCourseListofStudentsLayout.setHorizontalGroup(
            adminDisplayCourseListofStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDisplayCourseListofStudentsLayout.createSequentialGroup()
                .addGroup(adminDisplayCourseListofStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(adminDisplayCourseListofStudentsLayout.createSequentialGroup()
                        .addComponent(displayCourseListDisplayCourseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayCourseListDisplayCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayCourseListDisplayButton))
                    .addComponent(displayCourseListScheduledStudentLabel)
                    .addComponent(displayCourseListWaitlistedStudentLabel)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addGap(0, 107, Short.MAX_VALUE))
        );
        adminDisplayCourseListofStudentsLayout.setVerticalGroup(
            adminDisplayCourseListofStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDisplayCourseListofStudentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminDisplayCourseListofStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayCourseListDisplayCourseLabel)
                    .addComponent(displayCourseListDisplayCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayCourseListDisplayButton))
                .addGap(18, 18, 18)
                .addComponent(displayCourseListScheduledStudentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(displayCourseListWaitlistedStudentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257))
        );

        AdminPane.addTab("Display Course List of Students", adminDisplayCourseListofStudents);

        adminDropStudentLabel.setText("Select Student:");

        adminDropStudentButton.setText("Drop Student");
        adminDropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropStudentButtonActionPerformed(evt);
            }
        });

        adminDropStudentTextArea.setColumns(20);
        adminDropStudentTextArea.setRows(5);
        jScrollPane8.setViewportView(adminDropStudentTextArea);

        javax.swing.GroupLayout adminDropStudentLayout = new javax.swing.GroupLayout(adminDropStudent);
        adminDropStudent.setLayout(adminDropStudentLayout);
        adminDropStudentLayout.setHorizontalGroup(
            adminDropStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDropStudentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminDropStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(adminDropStudentLayout.createSequentialGroup()
                        .addComponent(adminDropStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adminDropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminDropStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        adminDropStudentLayout.setVerticalGroup(
            adminDropStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDropStudentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminDropStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminDropStudentLabel)
                    .addComponent(adminDropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDropStudentButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        AdminPane.addTab("Drop Student", adminDropStudent);

        adminDropCourseLabel.setText("Select Course to be Dropped:");

        admiDropCourseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admiDropCourseComboBoxActionPerformed(evt);
            }
        });

        adminDropCourseButton.setText("Drop Course");
        adminDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropCourseButtonActionPerformed(evt);
            }
        });

        adminDropCourseTextArea.setColumns(20);
        adminDropCourseTextArea.setRows(5);
        jScrollPane5.setViewportView(adminDropCourseTextArea);

        javax.swing.GroupLayout adminDropCourseLayout = new javax.swing.GroupLayout(adminDropCourse);
        adminDropCourse.setLayout(adminDropCourseLayout);
        adminDropCourseLayout.setHorizontalGroup(
            adminDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDropCourseLayout.createSequentialGroup()
                .addGroup(adminDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminDropCourseLayout.createSequentialGroup()
                        .addComponent(adminDropCourseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(admiDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adminDropCourseButton))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 86, Short.MAX_VALUE))
        );
        adminDropCourseLayout.setVerticalGroup(
            adminDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDropCourseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminDropCourseLabel)
                    .addComponent(admiDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDropCourseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        AdminPane.addTab("Drop Course", adminDropCourse);

        javax.swing.GroupLayout AdminTabLayout = new javax.swing.GroupLayout(AdminTab);
        AdminTab.setLayout(AdminTabLayout);
        AdminTabLayout.setHorizontalGroup(
            AdminTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AdminPane)
        );
        AdminTabLayout.setVerticalGroup(
            AdminTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminTabLayout.createSequentialGroup()
                .addComponent(AdminPane, javax.swing.GroupLayout.PREFERRED_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Admin", AdminTab);

        studentDisplayCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "COURE CODE", "DESCRIPTION", "SEATS"
            }
        ));
        jScrollPane1.setViewportView(studentDisplayCourseTable);

        studentDisplayCoursesButton.setText("Display");
        studentDisplayCoursesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDisplayCoursesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentDisplayCourseLayout = new javax.swing.GroupLayout(studentDisplayCourse);
        studentDisplayCourse.setLayout(studentDisplayCourseLayout);
        studentDisplayCourseLayout.setHorizontalGroup(
            studentDisplayCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDisplayCourseLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(studentDisplayCourseLayout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addComponent(studentDisplayCoursesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        studentDisplayCourseLayout.setVerticalGroup(
            studentDisplayCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDisplayCourseLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(studentDisplayCoursesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentDisplayCourses.addTab("Display Courses", studentDisplayCourse);

        studentScheduleCoursesSelectedCourseLabel.setText("Selected Course:");

        studentScheduleCoursesComboBoxCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentScheduleCoursesComboBoxCourseActionPerformed(evt);
            }
        });

        studentScheduleCoursesSelectedStudentLabel.setText("Selected Student:");

        studentScheduleCoursesComboBoxSelectedStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentScheduleCoursesComboBoxSelectedStudentActionPerformed(evt);
            }
        });

        studentScheduleCoursesSubmitButton.setText("Submit");
        studentScheduleCoursesSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentScheduleCoursesSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentScheduleCoursesLayout = new javax.swing.GroupLayout(studentScheduleCourses);
        studentScheduleCourses.setLayout(studentScheduleCoursesLayout);
        studentScheduleCoursesLayout.setHorizontalGroup(
            studentScheduleCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentScheduleCoursesLayout.createSequentialGroup()
                .addGroup(studentScheduleCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(studentScheduleCoursesLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, studentScheduleCoursesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(studentScheduleCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentScheduleCoursesSelectedCourseLabel)
                            .addComponent(studentScheduleCoursesSelectedStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(studentScheduleCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentScheduleCoursesSubmitButton)
                            .addGroup(studentScheduleCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(studentScheduleCoursesComboBoxSelectedStudent, 0, 180, Short.MAX_VALUE)
                                .addComponent(studentScheduleCoursesComboBoxCourse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(378, 378, 378))
        );
        studentScheduleCoursesLayout.setVerticalGroup(
            studentScheduleCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentScheduleCoursesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentScheduleCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentScheduleCoursesSelectedCourseLabel)
                    .addComponent(studentScheduleCoursesComboBoxCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(studentScheduleCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentScheduleCoursesSelectedStudentLabel)
                    .addComponent(studentScheduleCoursesComboBoxSelectedStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(studentScheduleCoursesSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(studentScheduleCoursesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentDisplayCourses.addTab("Schedule Courses", studentScheduleCourses);

        studentDisplayScheduleStudentLabel.setText("Select Student:");

        studentDisplayScheduleComboBoxStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDisplayScheduleComboBoxStudentActionPerformed(evt);
            }
        });

        studentDisplayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "COURSE CODE", "STATUS"
            }
        ));
        jScrollPane3.setViewportView(studentDisplayScheduleTable);

        studentDisplayScheduleDisplayButton.setText("Display");
        studentDisplayScheduleDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDisplayScheduleDisplayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentDisplayScheduleLayout = new javax.swing.GroupLayout(studentDisplaySchedule);
        studentDisplaySchedule.setLayout(studentDisplayScheduleLayout);
        studentDisplayScheduleLayout.setHorizontalGroup(
            studentDisplayScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDisplayScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentDisplayScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentDisplayScheduleLayout.createSequentialGroup()
                        .addComponent(studentDisplayScheduleStudentLabel)
                        .addGap(67, 67, 67)
                        .addComponent(studentDisplayScheduleComboBoxStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentDisplayScheduleLayout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(studentDisplayScheduleDisplayButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        studentDisplayScheduleLayout.setVerticalGroup(
            studentDisplayScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDisplayScheduleLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(studentDisplayScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentDisplayScheduleStudentLabel)
                    .addComponent(studentDisplayScheduleComboBoxStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(studentDisplayScheduleDisplayButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentDisplayCourses.addTab("Display Schedule", studentDisplaySchedule);

        studentDropCourseLabel.setText("Select Course:");

        studentDropCourseButton.setText("Drop Course");
        studentDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropCourseButtonActionPerformed(evt);
            }
        });

        studentDropCourseStudentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropCourseStudentComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Student:");

        studentDropCourseTextArea.setColumns(20);
        studentDropCourseTextArea.setRows(5);
        jScrollPane6.setViewportView(studentDropCourseTextArea);

        javax.swing.GroupLayout studentDropCourseLayout = new javax.swing.GroupLayout(studentDropCourse);
        studentDropCourse.setLayout(studentDropCourseLayout);
        studentDropCourseLayout.setHorizontalGroup(
            studentDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDropCourseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentDropCourseLabel)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(studentDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(studentDropCourseStudentComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentDropCourseComboBox, 0, 232, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentDropCourseButton)
                .addContainerGap(255, Short.MAX_VALUE))
            .addGroup(studentDropCourseLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        studentDropCourseLayout.setVerticalGroup(
            studentDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDropCourseLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(studentDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentDropCourseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentDropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentDropCourseLabel)
                    .addComponent(studentDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentDropCourseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );

        studentDisplayCourses.addTab("Drop Course", studentDropCourse);

        javax.swing.GroupLayout StudentTabLayout = new javax.swing.GroupLayout(StudentTab);
        StudentTab.setLayout(StudentTabLayout);
        StudentTabLayout.setHorizontalGroup(
            StudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentDisplayCourses))
        );
        StudentTabLayout.setVerticalGroup(
            StudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentDisplayCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 356, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Student", StudentTab);

        currentSemesterTextLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        currentSemesterTextLabel.setText("Current Semester:");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentSemesterComboBoxActionPerformed(evt);
            }
        });

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CourseSchedulerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(currentSemesterTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(currentSemesterComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(changeSemesterButton)
                        .addGap(80, 80, 80))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(CourseSchedulerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentSemesterTextLabel)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void currentSemesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentSemesterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentSemesterComboBoxActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        currentSemester = currentSemesterComboBox.getSelectedItem().toString();
        
        currentSemesterLabel.setText(currentSemester);
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void studentDisplayScheduleDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDisplayScheduleDisplayButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = students.get(studentDisplayScheduleComboBoxStudent.getSelectedIndex()).getStudentID();
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester,studentID);

        DefaultTableModel displayCoursesTableModel = (DefaultTableModel)studentDisplayScheduleTable.getModel();

        displayCoursesTableModel.setNumRows(0);
        Object[] rowData = new Object[2];

        for(ScheduleEntry entry:schedule){
            rowData[0] = entry.getCourseCode();
            rowData[1] = entry.getStatus();
            displayCoursesTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_studentDisplayScheduleDisplayButtonActionPerformed

    private void studentDisplayScheduleComboBoxStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDisplayScheduleComboBoxStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentDisplayScheduleComboBoxStudentActionPerformed

    private void studentScheduleCoursesSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentScheduleCoursesSubmitButtonActionPerformed
        // TODO add your handling code here:
        String name = studentScheduleCoursesComboBoxSelectedStudent.getSelectedItem().toString();
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = students.get(studentScheduleCoursesComboBoxSelectedStudent.getSelectedIndex()).getStudentID();
        String courseCode = studentScheduleCoursesComboBoxCourse.getSelectedItem().toString();
        Timestamp timeStamp = new Timestamp(System.currentTimeMillis());
        String status;

        if(ScheduleQueries.getScheduledStudentCount(currentSemester, courseCode) < CourseQueries.getCourseSeats(currentSemester, courseCode)){
            status = "S";
        }else{
            status = "W";
        }

        ScheduleEntry studentSchedule = new ScheduleEntry(currentSemester,courseCode,studentID,status,timeStamp);
        ScheduleQueries.addScheduleEntry(studentSchedule);

        if(status.equals("S")){
            studentScheduleCoursesLabel.setText(name+" has been scheduled for the class");
        }else{
            studentScheduleCoursesLabel.setText(name+" has been waitlisted for the class");
        }
    }//GEN-LAST:event_studentScheduleCoursesSubmitButtonActionPerformed

    private void studentScheduleCoursesComboBoxSelectedStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentScheduleCoursesComboBoxSelectedStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentScheduleCoursesComboBoxSelectedStudentActionPerformed

    private void studentScheduleCoursesComboBoxCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentScheduleCoursesComboBoxCourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentScheduleCoursesComboBoxCourseActionPerformed

    private void studentDisplayCoursesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDisplayCoursesButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayCoursesTableModel = (DefaultTableModel)studentDisplayCourseTable.getModel();

        displayCoursesTableModel.setNumRows(0);
        Object[] rowData = new Object[3];

        for(CourseEntry course:courses){
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getCourseDescription();
            rowData[2] = course.getSeats();
            displayCoursesTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_studentDisplayCoursesButtonActionPerformed

    private void adminAddStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminAddStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        String studentID = adminAddStudentIDtextField.getText();
        String firstName = adminAddStudentFirstNameTextField.getText();
        String lastName = adminAddStudentLastNameTextField.getText();

        StudentEntry student = new StudentEntry(studentID,firstName,lastName);
        StudentQueries.addStudent(student);

        adminAddCoursesLabel.setText(lastName+", "+firstName+ " has been added.");
        addSemesterStatusLabel.setText(lastName+", "+firstName+ " has been added.");
        adminAddStudentLabel.setText(lastName+", "+firstName+ " has been added.");

        rebuildStudentComboBoxes();
    }//GEN-LAST:event_adminAddStudentSubmitButtonActionPerformed

    private void adminAddStudentFirstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminAddStudentFirstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminAddStudentFirstNameTextFieldActionPerformed

    private void adminAddStudentIDtextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminAddStudentIDtextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminAddStudentIDtextFieldActionPerformed

    private void adminAddCoursesSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminAddCoursesSubmitButtonActionPerformed
        // TODO add your handling code here:
        String courseCode = adminAddCoursesCodeTextField.getText();
        String courseDescription = adminAddCoursesDescriptionTextField.getText();
        int seats = (Integer)adminAddCoursesSeatSpinner.getValue();

        CourseEntry course = new CourseEntry(currentSemester,courseCode,courseDescription,seats);
        CourseQueries.addCourse(course);

        adminAddCoursesLabel.setText(courseCode + " has been added.");
        addSemesterStatusLabel.setText(courseCode + " has been added.");
        adminAddStudentLabel.setText(courseCode + " has been added.");

        rebuildCourseComboBoxes();
    }//GEN-LAST:event_adminAddCoursesSubmitButtonActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        // TODO add your handling code here:
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void addSemesterTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterTextfieldActionPerformed
        // TODO add your handling code here: 
    }//GEN-LAST:event_addSemesterTextfieldActionPerformed

    private void displayCourseListDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCourseListDisplayButtonActionPerformed
        // TODO add your handling code here:
        String course = displayCourseListDisplayCourseComboBox.getSelectedItem().toString();
        
        ArrayList<ScheduleEntry> scheduledStudents = ScheduleQueries.getScheduledStudentsByCourse(currentSemester,course);
        DefaultTableModel scheduledStudentTable = (DefaultTableModel)displayCourseListScheduledStudentTable.getModel();

        scheduledStudentTable.setNumRows(0);
        Object[] rowDataStudentScheduled = new Object[3];
        
        for(ScheduleEntry student:scheduledStudents){
            String scheduledID = student.getStudentID();
            StudentEntry s = StudentQueries.getStudent(scheduledID);
            rowDataStudentScheduled[0] = s.getLastName();
            rowDataStudentScheduled[1] = s.getFirstName();
            rowDataStudentScheduled[2] = s.getStudentID();
            
            scheduledStudentTable.addRow(rowDataStudentScheduled);
        }
        
        ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester,course);
        DefaultTableModel waitlistedStudentTable = (DefaultTableModel)displayCourseListWaitlistedStudentTable.getModel();
        
        waitlistedStudentTable.setNumRows(0);
        Object[] rowDataStudentWaitlisted = new Object[3];
        
        for(ScheduleEntry student:waitlistedStudents){
            String waitlistedID = student.getStudentID();
            StudentEntry w = StudentQueries.getStudent(waitlistedID);
            rowDataStudentWaitlisted[0] = w.getLastName();;
            rowDataStudentWaitlisted[1] = w.getFirstName();
            rowDataStudentWaitlisted[2] = w.getStudentID();
            
            waitlistedStudentTable.addRow(rowDataStudentWaitlisted);
        }   
        
    }//GEN-LAST:event_displayCourseListDisplayButtonActionPerformed

    private void adminDropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropStudentButtonActionPerformed
        // TODO add your handling code here:
        String student = adminDropStudentComboBox.getSelectedItem().toString();
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = students.get(adminDropStudentComboBox.getSelectedIndex()).getStudentID();

        adminDropStudentTextArea.setText("\n"+student+" "+studentID+" has been dropped from the list of students.\n");
        
        ArrayList<String> allSemesters = SemesterQueries.getSemesterList();
        
        for(String semester:allSemesters){
            ArrayList<ScheduleEntry> studentCourses = ScheduleQueries.getScheduleByStudent(semester, studentID);
            adminDropStudentTextArea.append("\n"+"For Semester "+semester+"\n");
            
            for(ScheduleEntry course:studentCourses){
                ArrayList<ScheduleEntry> waitListedStudents = ScheduleQueries.getWaitlistedStudentsByCourse(semester, course.getCourseCode());
                if(course.getStatus().equals("S")){
                    adminDropStudentTextArea.append(student+" "+studentID+" has been dropped from "+course.getCourseCode()+"\n");
                    if(waitListedStudents.isEmpty()){  
                    }
                    else{
                        ScheduleEntry nextStudent = waitListedStudents.get(0);
                        ScheduleQueries.updateScheduleEntry(semester,nextStudent);
                        StudentEntry nextStudentInfo = StudentQueries.getStudent(nextStudent.getStudentID());
                        adminDropStudentTextArea.append(nextStudentInfo.getLastName() +", "+ nextStudentInfo.getFirstName()+", "+ nextStudentInfo.getStudentID()+ " has been scheduled into "+ course.getCourseCode()+"\n");
                    }
                }
                else{
                    ScheduleQueries.dropStudentScheduleByCourse(semester,studentID,course.getCourseCode());
                    adminDropStudentTextArea.append(student+" "+studentID+" has been dropped from the waitlist " +course.getCourseCode()+"\n");
                }
            }
        }
        adminDropStudentTextArea.append("\n"+student+" has been removed from all the student comboboxes.\n");
        StudentQueries.dropStudent(studentID);         
        rebuildStudentComboBoxes();  
    }//GEN-LAST:event_adminDropStudentButtonActionPerformed

    private void displayCourseListDisplayCourseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCourseListDisplayCourseComboBoxActionPerformed
        // TODO add your handling code here: 
    }//GEN-LAST:event_displayCourseListDisplayCourseComboBoxActionPerformed

    private void adminDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropCourseButtonActionPerformed
        // TODO add your handling code here:
        String course = admiDropCourseComboBox.getSelectedItem().toString();
        
        ArrayList<ScheduleEntry> scheduledStudents = ScheduleQueries.getScheduledStudentsByCourse(currentSemester,course);
        ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester,course);
        
        adminDropCourseTextArea.append("\nScheduled students dropped from the course:\n");
        for(ScheduleEntry sStudent:scheduledStudents){
            String studentID = sStudent.getStudentID();
            ScheduleQueries.dropStudentScheduleByCourse(currentSemester,studentID,course);
            StudentEntry studentInfo = StudentQueries.getStudent(sStudent.getStudentID());
            adminDropCourseTextArea.append(studentInfo.getFirstName()+", "+studentInfo.getLastName()+" "+studentID+"\n");  
        }
        
        adminDropCourseTextArea.append("\nWaitlisted students dropped from the course: \n");
        for(ScheduleEntry wStudent:waitlistedStudents){
            String studentID = wStudent.getStudentID();
            ScheduleQueries.dropStudentScheduleByCourse(currentSemester,studentID,course);
            StudentEntry studentInfo = StudentQueries.getStudent(wStudent.getStudentID());
            adminDropCourseTextArea.append(studentInfo.getFirstName()+", "+studentInfo.getLastName()+" "+studentID+"\n");
        }
        CourseQueries.dropCourse(currentSemester,course);
        rebuildCourseComboBoxes();

    }//GEN-LAST:event_adminDropCourseButtonActionPerformed

    private void admiDropCourseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admiDropCourseComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_admiDropCourseComboBoxActionPerformed

    private void studentDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropCourseButtonActionPerformed
        // TODO add your handling code here:
        String course = studentDropCourseComboBox.getSelectedItem().toString();
        String studentName = studentDropCourseStudentComboBox.getSelectedItem().toString();
        ArrayList<StudentEntry> allStudents = StudentQueries.getAllStudents();
        String studentID = allStudents.get(studentDropCourseStudentComboBox.getSelectedIndex()).getStudentID();
        
        ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getScheduleByStudent(currentSemester,studentID);
        ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, course);
        
        for(ScheduleEntry entry:studentSchedule){
            if(entry.getCourseCode().equals(course)){
                ScheduleQueries.dropStudentScheduleByCourse(currentSemester,studentID, course);
                studentDropCourseTextArea.append(studentName+" "+studentID+" has been dropped from "+course+"\n");
                
                if(waitlistedStudents.isEmpty()){
                    continue;
                }else{
                    ScheduleEntry nextEntry = waitlistedStudents.get(0);
                    StudentEntry nextStudent = StudentQueries.getStudent(nextEntry.getStudentID());
                    studentDropCourseTextArea.append(nextStudent.getLastName()+", "+nextStudent.getFirstName()+" has been scheduled into "+course);
                    ScheduleQueries.updateScheduleEntry(currentSemester,nextEntry);
                }
            } 
        }
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_studentDropCourseButtonActionPerformed

    private void studentDropCourseStudentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropCourseStudentComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentDropCourseStudentComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AdminPane;
    private javax.swing.JPanel AdminTab;
    private javax.swing.JLabel CourseSchedulerLabel;
    private javax.swing.JPanel StudentTab;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JComboBox<String> admiDropCourseComboBox;
    private javax.swing.JPanel adminAddCourses;
    private javax.swing.JTextField adminAddCoursesCodeTextField;
    private javax.swing.JLabel adminAddCoursesCourseCodeLabel;
    private javax.swing.JLabel adminAddCoursesDescriptionLabel;
    private javax.swing.JTextField adminAddCoursesDescriptionTextField;
    private javax.swing.JLabel adminAddCoursesLabel;
    private javax.swing.JSpinner adminAddCoursesSeatSpinner;
    private javax.swing.JButton adminAddCoursesSubmitButton;
    private javax.swing.JPanel adminAddSemester;
    private javax.swing.JLabel adminAddSemesterNameLabel;
    private javax.swing.JPanel adminAddStudent;
    private javax.swing.JLabel adminAddStudentFirstNameLabel;
    private javax.swing.JTextField adminAddStudentFirstNameTextField;
    private javax.swing.JLabel adminAddStudentIDLabel;
    private javax.swing.JTextField adminAddStudentIDtextField;
    private javax.swing.JLabel adminAddStudentLabel;
    private javax.swing.JLabel adminAddStudentLastNameLabel;
    private javax.swing.JTextField adminAddStudentLastNameTextField;
    private javax.swing.JButton adminAddStudentSubmitButton;
    private javax.swing.JPanel adminDisplayCourseListofStudents;
    private javax.swing.JPanel adminDropCourse;
    private javax.swing.JButton adminDropCourseButton;
    private javax.swing.JLabel adminDropCourseLabel;
    private javax.swing.JTextArea adminDropCourseTextArea;
    private javax.swing.JPanel adminDropStudent;
    private javax.swing.JButton adminDropStudentButton;
    private javax.swing.JComboBox<String> adminDropStudentComboBox;
    private javax.swing.JLabel adminDropStudentLabel;
    private javax.swing.JTextArea adminDropStudentTextArea;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JLabel currentSemesterTextLabel;
    private javax.swing.JButton displayCourseListDisplayButton;
    private javax.swing.JComboBox<String> displayCourseListDisplayCourseComboBox;
    private javax.swing.JLabel displayCourseListDisplayCourseLabel;
    private javax.swing.JLabel displayCourseListScheduledStudentLabel;
    private javax.swing.JTable displayCourseListScheduledStudentTable;
    private javax.swing.JLabel displayCourseListWaitlistedStudentLabel;
    private javax.swing.JTable displayCourseListWaitlistedStudentTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel studentDisplayCourse;
    private javax.swing.JTable studentDisplayCourseTable;
    private javax.swing.JTabbedPane studentDisplayCourses;
    private javax.swing.JButton studentDisplayCoursesButton;
    private javax.swing.JPanel studentDisplaySchedule;
    private javax.swing.JComboBox<String> studentDisplayScheduleComboBoxStudent;
    private javax.swing.JButton studentDisplayScheduleDisplayButton;
    private javax.swing.JLabel studentDisplayScheduleStudentLabel;
    private javax.swing.JTable studentDisplayScheduleTable;
    private javax.swing.JPanel studentDropCourse;
    private javax.swing.JButton studentDropCourseButton;
    private javax.swing.JComboBox<String> studentDropCourseComboBox;
    private javax.swing.JLabel studentDropCourseLabel;
    private javax.swing.JComboBox<String> studentDropCourseStudentComboBox;
    private javax.swing.JTextArea studentDropCourseTextArea;
    private javax.swing.JPanel studentScheduleCourses;
    private javax.swing.JComboBox<String> studentScheduleCoursesComboBoxCourse;
    private javax.swing.JComboBox<String> studentScheduleCoursesComboBoxSelectedStudent;
    private javax.swing.JLabel studentScheduleCoursesLabel;
    private javax.swing.JLabel studentScheduleCoursesSelectedCourseLabel;
    private javax.swing.JLabel studentScheduleCoursesSelectedStudentLabel;
    private javax.swing.JButton studentScheduleCoursesSubmitButton;
    // End of variables declaration//GEN-END:variables
}
